<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dragon_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_collid_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = 2;
attacked = 0;

//Dragon Health, every level the dragon stay more powerfull
health_ = 30 + obj_control.level;
image_speed = 0.5;

//dead and blink damage variables
dead = false;
damaged = false;
time_damaged = 0;

//Time action movement to player
time_action = 0;
action = -1;

//Time attack, breath fire ball
fire = false;
time_fire = 0;
direction = 180;

last_speed = 0;
last_image_speed = image_speed;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !obj_control.paused{

    speed = last_speed;
    image_speed = last_image_speed;
   
    //If attacked more than health, dragon is dead        
    if !dead and attacked &gt;= health_  {
        src_exec_sound(snd_dragon_death);
        dead = true;
        //Count dragons death to player
        obj_viking.dragons += 1;
        speed = 0;
        sprite_index = spr_dragon_death;
        
        //Remove dragon up to play keep moving
        obj_control.dragon_up = false;
        image_index = 0;
        image_speed = 0.5;
        
        //Add 4 multiplier to player and drop 10 coins
        obj_viking.multiplier += 4;
        repeat(10){
            src_spawn_coin(x,y);
        }
    }
    
    if dead and image_index == (image_number - 1) {
        instance_destroy();
    }
    
    
    if y &gt; obj_viking.y {
        depth = -1;
    }else{
        depth = 0;
    }
    
    //Count time damaged to blink sprite
    if damaged {
        time_damaged += src_add_second();
        if time_damaged &gt; 0.1{
            damaged = false;
            time_damaged = 0;
        }
    }
    
    time_action += src_add_second();
    time_fire += src_add_second();
      
     /*Action IA Dragon
      time_action = time each action
      action = what the dragon need to do     
    */
    
    //If action == -1, the dragon walk to player direction
    if action == -1 and x &gt; room_width/2 {
        vikY = obj_viking.y;
        
        if vikY &gt; y {
            vikY += 50;
        }else{
            vikY -= 50;
        }
        
        direction = point_direction(x,y, obj_viking.x, vikY);
        action = 0;
        speed  = 5;
        
       
        //If action == 0, dragon breath fire ball
    }else if action = 0 and  x &lt; room_width/2 {
        src_exec_sound(snd_dragon_attack);
        action = 1;
        speed = 0;
        
        //Reset times
        time_action = 0;
        instance_create(x - 300, y - 215, obj_fire_ball);
        fire = true;
        time_fire = 0;
        
        //If action == 1, stop breath fire
    }else if action == 1 and time_action &gt; 2 {
        action = 2;
        
        //If action == 2, dragon need come back do right
    }else if action == 2 {
        direction = 0;
        speed = 5;
        action = 3;
        time_action = 0;
        
        //if action == 3, change actionm to walk to player again(restart dragon AI)
    }else if action == 3 and time_action &gt; 4 {
         action = -1;
    }   
    
    if dead {      
        image_speed = 0.5;
        
    }else if !fire{
    
        if speed &gt; 0 {
            sprite_index = spr_dragon_walk;
        }else{
            sprite_index = spr_dragon_idle;    
        }
    
        //If dragon is breathing, change sprite
    }else if fire {
        sprite_index = spr_dragon_attack;
        image_index = 1;
        
        if time_fire &gt; 0.3 {
             fire = false;
        }
    }
   
    
    //Keep last speed to come back from pause
    last_speed = speed;
    last_image_speed = image_speed;

}else{
    speed = 0;
    image_speed = 0;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_collid_bullets">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !dead{

    //damage from axe, dragon get one attack damage
    if other.type == 0 {
        attacked +=1;
        src_exec_sound(snd_axehit);
        if damaged {
            damaged = false;
        }else{
            damaged = true;
        }
        with(other){
            instance_destroy();
    
        }
        //Others atacckes kill the dragon imediatilly
    }else{
        damaged = true;
        attacked = 1000;
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_shadow_dragon,0,x,y);

//Drawn with blink if damage
if damaged{
    draw_sprite_ext(sprite_index, image_index,x,y,1,1, 0, c_white,0.4);
}else{
    draw_sprite_ext(sprite_index, image_index,x,y,1,1, 0, c_white,1);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>100,100</point>
    <point>100,100</point>
  </PhysicsShapePoints>
</object>
