<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_monster1_run</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_collid_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = 2;

//Type monster is random
type_monster = irandom_range(0,3);

//Damaged received
attacked = 0;

//heath 
health_ = 1;
image_speed = 0.7;
dead = false;

//damaged for blink image
damaged = false;
time_damaged = 0;

if type_monster == 2 {
    sprite_index = spr_monster2_run;
    health_ = 2;
}else if type_monster == 3{
    sprite_index = spr_monster3_run; 
    health_ = 3;

} 

//direction always to player
direction = 180;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !obj_control.paused{

    if !dead{
    
        //each monster have a different speed
         image_speed = 0.7;
         if type_monster == 2 {
                speed = 25;
         }else if type_monster == 3{
                speed = 12;
         } else{
                speed = 14;
         }
        
    }else{
        image_speed = 0.5;
    }
   
    //if a monster reach another side of screen the player lost the multiplier
    if x &lt; 0 {
        obj_viking.multiplier = 1;
        instance_destroy();
    }
    
    
    //If damaged more than health, monster is dead
    if !dead and attacked &gt;= health_  {
        src_exec_sound(snd_monster);
        obj_viking.monsters += 1;
        dead = true;
        
        //if dragon up stop(because player stop too)
        if obj_control.dragon_up{
            speed = 0;
        }else{ 
            speed = 10;
        }
        
        //Each monster drop a quantity different of coins
       if type_monster == 2 {
            sprite_index = spr_monster2_death;
            src_spawn_coin(x,y);
            src_spawn_coin(x,y);
        }else if type_monster == 3{
            sprite_index = spr_monster3_death; 
            src_spawn_coin(x,y);
            src_spawn_coin(x,y);
            src_spawn_coin(x,y);
        } else{
            sprite_index = spr_monster1_death; 
            src_spawn_coin(x,y);
        }
        
        //For smooth death
        image_index = 0;
        image_speed = 0.5;
        //increment player multiplier
        obj_viking.multiplier += 1;
    }
    
    //If end death animation, destroy object
    if dead and image_index == (image_number - 1) {
        instance_destroy();
    }
    
    
    //Change depth sprite
    if y &gt; obj_viking.y {
        depth = -1;
    }else{
        depth = 1;
    }
    
    //If damaged, blink time
    if damaged {
        time_damaged += src_add_second();
        if time_damaged &gt; 0.1{
            damaged = false;
            time_damaged = 0;
        }
    }

}else{
    speed = 0;
    image_speed = 0;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_collid_bullets">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !dead{

   //if bullet axe
    if other.type == 0 {
       //Damaged received from axe
        attacked +=1;
        src_exec_sound(snd_axehit);
        if damaged {
            damaged = false;
        }else{
            damaged = true;
        }
        with(other){
        //destroy axe
            instance_destroy();
    
        }
        
        //If other damage, kill instantly
    }else{
        damaged = true;
        attacked = 1000;
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Blink damage
if damaged{
    draw_sprite_ext(sprite_index, image_index,x,y,1,1, 0, c_white,0.4);
}else{
    draw_sprite_ext(sprite_index, image_index,x,y,1,1, 0, c_white,1);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>100,100</point>
    <point>100,100</point>
  </PhysicsShapePoints>
</object>
